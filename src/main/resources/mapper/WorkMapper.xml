<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ideality.coreflow.project.query.mapper.WorkMapper">

    <!-- parent_task_id가 동일한 세부일정 이름 목록 조회 -->
    <select id="findSubTaskNamesByParentTaskId" resultType="string">
        SELECT name
        FROM work
        WHERE parent_task_id = #{parentTaskId}
    </select>

    <!-- 동일한 태스크의 세부일정 상세목록 조회 -->
    <select id="findSubTaskDetailsByParentTaskId" resultType="com.ideality.coreflow.project.query.dto.DetailDTO">
        SELECT
        w.id AS work_id,             -- 작업 ID
        w.name AS task_name,         -- 작업 이름
        w.end_expect,                -- 예상 마감일
        w.delay_days,                -- 지연 일수
        w.progress_rate,             -- 진행률
        wd.dept_id,                  -- 부서 ID
        d.name AS dept_name          -- 부서 이름
        FROM work w
        LEFT JOIN work_dept wd ON w.id = wd.work_id    -- 작업과 부서 연결
        LEFT JOIN dept d ON wd.dept_id = d.id          -- 부서 테이블과 연결
        WHERE w.parent_task_id = #{parentTaskId}      -- parent_task_id로 필터링
        AND wd.is_deleted = FALSE                      -- 삭제되지 않은 부서만 조회
    </select>

    <select id="findWorkDetailById" resultType="com.ideality.coreflow.project.query.dto.WorkDetailDTO">
        SELECT
        w.id AS work_id,              -- 작업 ID
        w.name AS task_name,          -- 작업 이름
        w.description AS task_description,  -- 작업 설명
        w.start_expect,               -- 예상 시작일
        w.end_expect,                 -- 예상 마감일
        w.start_real,                 -- 실제 시작일
        w.end_real,                   -- 실제 마감일
        w.progress_rate,              -- 진행률
        w.delay_days,                 -- 지연 일수
        w.status AS task_status,      -- 상태
        wd.dept_id,                   -- 부서 ID
        d.name AS dept_name,          -- 부서 이름
        r.prev_work_id,               -- 선행 일정
        r.next_work_id,               -- 후행 일정
        p.user_id AS participant_user_id,  -- 참여자 ID
        p.role_id AS participant_role_id,  -- 참여자 역할
        u.name AS participant_name     -- 참여자 이름
        FROM work w
        LEFT JOIN work_dept wd ON w.id = wd.work_id    -- 작업과 부서 연결
        LEFT JOIN dept d ON wd.dept_id = d.id          -- 부서 테이블과 연결
        LEFT JOIN relation r ON w.id = r.prev_work_id OR w.id = r.next_work_id  -- 선행/후행 일정 연결
        LEFT JOIN participant p ON w.id = p.target_id AND p.target_type = 'TASK'   -- 참여자 연결
        LEFT JOIN user u ON p.user_id = u.id             -- 참여자 정보 조회
        WHERE w.id = #{workId}  -- workId로 필터링
        AND wd.is_deleted = FALSE                        -- 삭제되지 않은 부서만 조회
    </select>




</mapper>