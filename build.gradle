plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ideality'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // s3 버킷 연결을 위한 설정
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.261')
    implementation 'com.amazonaws:aws-java-sdk-s3'

    //필기. 테스트 코드에서도 롬복 적용(로그 기능 활용을 위한 추 가)
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.26.3'

    // jwt 의존성 추가
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // smtp를 위한 이메일 의존성 도입
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 멀티테넌시 설정을 위한 추가
    implementation 'org.hibernate.orm:hibernate-core'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // redis 도입
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // ✅ Spring Boot 테스트 기본 제공 (JUnit 5 + Mockito 등 포함)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ✅ AssertJ (더 강력한 fluent-style assertions)
    testImplementation 'org.assertj:assertj-core:3.26.3'

    // ✅ JUnit 5 Jupiter API와 엔진 (명시적으로 관리하고 싶을 때)
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // ✅ Mockito (이미 spring-boot-starter-test에 포함되지만 명시적 관리 가능)
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // openhtmltopdf
    implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.10'
    implementation 'com.openhtmltopdf:openhtmltopdf-slf4j:1.0.10'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

tasks.named('test') {
    useJUnitPlatform()
}
